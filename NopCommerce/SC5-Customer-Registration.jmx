<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SC5-Customer Registration-Random-Function" enabled="true">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookies" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:56.0) Gecko/20100101 Firefox/56.0</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="user_defined" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">store-preprod.bzm-presales.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ThreadGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">200</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1508337295000</longProp>
        <longProp name="ThreadGroup.end_time">1508337295000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home Page" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/nopcommerce</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;register_button&apos; for &apos;Register&apos;" enabled="true">
            <stringProp name="HtmlExtractor.refname">register_button</stringProp>
            <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.header-upper div.header-links-wrapper div.header-links ul li a.ico-register</stringProp>
            <stringProp name="HtmlExtractor.attribute"></stringProp>
            <stringProp name="HtmlExtractor.match_number">1</stringProp>
            <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Upgrade_Insecure_Requests&apos; for &apos;1&apos;" enabled="true">
            <stringProp name="HtmlExtractor.refname">Upgrade_Insecure_Requests</stringProp>
            <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 div.page.home-page div.page-body div.product-grid.home-page-product-grid div.item-grid div.item-box div.product-item</stringProp>
            <stringProp name="HtmlExtractor.attribute">data-productid</stringProp>
            <stringProp name="HtmlExtractor.match_number">1</stringProp>
            <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;url_1&apos; for &apos;1&apos;" enabled="true">
            <stringProp name="HtmlExtractor.refname">url_1</stringProp>
            <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 div.page.home-page div.page-body div.product-grid.home-page-product-grid div.item-grid div.item-box div.product-item</stringProp>
            <stringProp name="HtmlExtractor.attribute"></stringProp>
            <stringProp name="HtmlExtractor.match_number">1</stringProp>
            <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
          </HtmlExtractor>
          <hashTree/>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos;" enabled="true">
            <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
            <stringProp name="HtmlExtractor.expr">div#newsletter-subscribe-block div.newsletter-validation span.field-validation-valid</stringProp>
            <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
            <stringProp name="HtmlExtractor.match_number">1</stringProp>
            <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
          </HtmlExtractor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Register Transaction" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">${Upgrade_Insecure_Requests}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Register Link" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/nopCommerce/register</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://store.bzm-presales.com/nopcommerce</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;register_button&apos; for &apos;Register&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">register_button</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.header-upper div.header-links-wrapper div.header-links ul li a.ico-register</stringProp>
              <stringProp name="HtmlExtractor.attribute"></stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;register_button&apos; for &apos;Register&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">register_button</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-title h1</stringProp>
              <stringProp name="HtmlExtractor.attribute"></stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;register_button&apos; for &apos;Register&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">register_button</stringProp>
              <stringProp name="HtmlExtractor.expr">input#register-button[name=&quot;register-button&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#FirstName[name=&quot;FirstName&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#LastName[name=&quot;LastName&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs.date-of-birth span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs.date-of-birth span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs.date-of-birth span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#Email[name=&quot;Email&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#Newsletter[name=&quot;Newsletter&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#Newsletter[name=&quot;Newsletter&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#Password[name=&quot;Password&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">input#ConfirmPassword[name=&quot;ConfirmPassword&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-val</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Newsletter&apos; for &apos;true&apos; - alternative" enabled="false">
              <stringProp name="HtmlExtractor.refname">Newsletter</stringProp>
              <stringProp name="HtmlExtractor.expr">div#newsletter-subscribe-block div.newsletter-validation span.field-validation-valid</stringProp>
              <stringProp name="HtmlExtractor.attribute">data-valmsg-replace</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;Upgrade_Insecure_Requests&apos; for &apos;1&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">Upgrade_Insecure_Requests</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs.date-of-birth select[name=&quot;DateOfBirthDay&quot;] option</stringProp>
              <stringProp name="HtmlExtractor.attribute"></stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;url_1&apos; for &apos;1&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">url_1</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-page div.page-body div.fieldset div.form-fields div.inputs.date-of-birth select[name=&quot;DateOfBirthDay&quot;] option</stringProp>
              <stringProp name="HtmlExtractor.attribute"></stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;__RequestVerificationToken&apos; for &apos;FuR_f9ICkQgilAv_S8zd3gUsnwH917Nen6Mr4Bi8tF1oHO2y9GtdtK1dN982-_0w9eRpmB_7mhmgclGKnTJ-seYmBAnYhgGQE9gUTGhtNYY1&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">__RequestVerificationToken</stringProp>
              <stringProp name="HtmlExtractor.expr">body &gt; div.master-wrapper-page &gt; div.master-wrapper-content &gt; div &gt; div &gt; form &gt; input[type=&quot;hidden&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit Registration" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Newsletter" elementType="HTTPArgument">
                  <stringProp name="Argument.name">Newsletter</stringProp>
                  <stringProp name="Argument.value">${Newsletter}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="FirstName" elementType="HTTPArgument">
                  <stringProp name="Argument.name">FirstName</stringProp>
                  <stringProp name="Argument.value">${__RandomString(6,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="register-button" elementType="HTTPArgument">
                  <stringProp name="Argument.name">register-button</stringProp>
                  <stringProp name="Argument.value">${register_button}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="LastName" elementType="HTTPArgument">
                  <stringProp name="Argument.name">LastName</stringProp>
                  <stringProp name="Argument.value">${__RandomString(6,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Company" elementType="HTTPArgument">
                  <stringProp name="Argument.name">Company</stringProp>
                  <stringProp name="Argument.value">${__RandomString(6,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Email" elementType="HTTPArgument">
                  <stringProp name="Argument.name">Email</stringProp>
                  <stringProp name="Argument.value">user${__RandomString(6,123456789,)}@example.com</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="__RequestVerificationToken" elementType="HTTPArgument">
                  <stringProp name="Argument.name">__RequestVerificationToken</stringProp>
                  <stringProp name="Argument.value">${__RequestVerificationToken}</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DateOfBirthMonth" elementType="HTTPArgument">
                  <stringProp name="Argument.name">DateOfBirthMonth</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Password" elementType="HTTPArgument">
                  <stringProp name="Argument.name">Password</stringProp>
                  <stringProp name="Argument.value">CAdemo123</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ConfirmPassword" elementType="HTTPArgument">
                  <stringProp name="Argument.name">ConfirmPassword</stringProp>
                  <stringProp name="Argument.value">CAdemo123</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DateOfBirthDay" elementType="HTTPArgument">
                  <stringProp name="Argument.name">DateOfBirthDay</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DateOfBirthYear" elementType="HTTPArgument">
                  <stringProp name="Argument.name">DateOfBirthYear</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/nopCommerce/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://store.bzm-presales.com/nopCommerce/register</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;register_continue&apos; for &apos;Continue&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">register_continue</stringProp>
              <stringProp name="HtmlExtractor.expr">div.master-wrapper-page div.header div.master-wrapper-content div.master-column-wrapper div.center-1 form div.page.registration-result-page div.page-body div.buttons input.button-1.register-continue-button[name=&quot;register-continue&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Get &apos;__RequestVerificationToken_1&apos; for &apos;qqqNF8fk71cKltGFKYQWoJ6pmtnUyNjvzWiBTlyKSHHwKJZwpVg-disoyiONosQj3irEhDUiuP8NSESGgLiQaV8QCNeRSJa45PQ8ukahy0hY8b9BnIpLNDJEk-mfpBMy0&apos;" enabled="true">
              <stringProp name="HtmlExtractor.refname">__RequestVerificationToken_1</stringProp>
              <stringProp name="HtmlExtractor.expr">body &gt; div.master-wrapper-page &gt; div.master-wrapper-content &gt; div &gt; div &gt; form &gt; input[type=&quot;hidden&quot;]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.match_number">1</stringProp>
              <stringProp name="HtmlExtractor.default">JQCSS_NOT_FOUND</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.extractor_impl">JSOUP</stringProp>
            </HtmlExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
